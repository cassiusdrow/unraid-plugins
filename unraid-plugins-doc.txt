<?xml version='1.0' standalone='yes'?>

<!-- -------------------------------------------------------------------------
-- Plugin must start with the line above
--------------------------------------------------------------------------- -->


<!-- -------------------------------------------------------------------------
-- Basic plugin architechture
--------------------------------------------------------------------------- -->
<!--
A plugin requires:
   1. Plugin name (<name>)
   2. Plugin file (<name>.plg) - this file
   3. Plugin Icon (<name>.png) - displayed in the GUI and in the plugin manager
   4. Plugin tarball (<name>.txz) - contains all files for the tmpfs
   5. Plugin tarball MD5 file (<name>.md5) - verifies the tarball integrity
   6.


plugin locations

/boot/packages                            Slackware packages that must survive a reboot go here
/tmp/plugins                              Plugins are initially downloaded here
/boot/config/plugins-error                Plugins that error are moved here
/boot/config/plugins-stale                Plugins that are replacing a "built-in" plugin but are older versions are moved here
/boot/config/plugins-removed              Plugins that are removed are moved here
/boot/config/plugins/<name>               Plugin files that must survive a reboot go here (tarball, config files, logs)
      <name>.txz                          Tarball of tmpfs items
      <name>.conf                         Configuration file
      <name>.cron                         cron file (how does this work? Is it automatic?
/boot/config/plugins/<name>/packages      Slackware packages for the plugin

/var/log/plugins                          Registers installed plugins, plugin removal uses the symlinked files here


-->



<!-- -------------------------------------------------------------------------
-- Define replacement strings for the rest of the file.
--------------------------------------------------------------------------- -->
<!DOCTYPE PLUGIN [
   <!ENTITY name          "plugin name">
   <!ENTITY author        "cassiusdrow">
   <!ENTITY repo          "unraid-plugins">
   <!ENTITY branch        "master">
   <!ENTITY version       "YYYY.MM.DD[-9] or YYYY.MM.DD[a]">
   <!ENTITY min           "6.3.5">
   <!ENTITY max           "6.3.5">

   ## MD5 for tarball can be here or in a separate file ??
   <!ENTITY md5       "58f1341d395080af925b477195906414">


   <!ENTITY plg           "&name;.plg">
   <!ENTITY icon          "&name;.png">
   <!ENTITY plg-ver       "&name;-&version;">
   <!ENTITY plg-txz       "&plg-ver;.txz">
   <!ENTITY plg-md5       "&plg-ver;.md5">

   <!ENTITY git-svrXX     "https://raw.github.com">
   <!ENTITY git-svr       "https://raw.githubusercontent.com">
   <!ENTITY git-URL       "&git-svr;/&author;/&repo;/&branch;">
   <!ENTITY arc-URL       "&git-URL;/archive">
   <!ENTITY plgs-URL      "&git-URL;/plugins">

   <!ENTITY fls-pkg-dir   "/boot/packages">
   <!ENTITY fls-plgs-dir  "/boot/config/plugins">
   <!ENTITY tfs-plgs-dir  "/usr/local/emhttp/plugins">

   <!ENTITY fls-plg-dir   "&fls-plgs-dir;/&name;">
   <!ENTITY tfs-plg-dir   "&tfs-plgs-dir;/&name;">

   <!ENTITY plg-txz-URL   "&arc-URL;/&plg-txz;">
   <!ENTITY plg-md5-URL   "&arc-URL;/&plg-md5;">

   <!ENTITY fls-plg       "&fls-plgs-dir;/&plg;">
   <!ENTITY fls-plg-txz   "&fls-plg-dir;/&plg-txz;">
   <!ENTITY fls-plg-md5   "&fls-plg-dir;/&plg-md5;">

   <!ENTITY repo-URL      "http://slackware.mirror-server.org/slackware64-14.2/slackware64/a">
   <!ENTITY prg-pkg       "filename-version.txz">
   <!ENTITY prg-pkg-md5   "de646f44d881b6c4292e353b717792cd">
   <!ENTITY prg-pkg-URL   "&repo-URL;/&prg-pkg;">

   <!ENTITY pluginURL     "&plgs-URL;/&plg;">
   <!ENTITY launch        "location of plugin">
]>


<!-- -------------------------------------------------------------------------
-- Describe the plugin to the unRAID plugin manager
--------------------------------------------------------------------------- -->
<PLUGIN
   name="&name;"
   author="&author;"
   version="&version;"
   pluginURL="&pluginURL;"
   min="&min;"
   max="&max;"
   launch="&launch;"
>



<!-- -------------------------------------------------------------------------
-- Plugin changelog for the unRAID plugin manager
--------------------------------------------------------------------------- -->
<CHANGES>
##&name;

###&version;
- Initial release

</CHANGES>


<!-- -------------------------------------------------------------------------
-- To download a file, check its integrity, and process it or execute it:
--
--    <FILE Name="(filename to save as on the server)"
--          Run="(program to execute passing Name as parameter)"
--          Mode="(access mode to set)"
--    >
--    <URL>(URL to download from)</URL>
--    <MD5>(MD5 string to compare against the file</MD5>
--    </FILE>
--
--    Required
--       <FILE Name="">
--       <URL></URL>
--       </FILE>
--
--    Optionsl
--       Run=
--       Mode=
--       <MD5></MD5>
--
--
--
--
--
--
--    <FILE {Name="(filename)"}
--          {Run="(program)"}
--          {Method="(method)"}
--          {Min="(unraid version)"}
--          {Max="(unraid version)"}
--          {Type="(file type)"}
--          {Mode="(access mode)"}
--    >
--    {<LOCAL>(   )</LOCAL>}
--    {<URL>(URL)</URL>}
--    {<MD5>(MD5)</MD5>}
--    {<INLINE>
--     (file contents)
--     </INLINE>}
--    </FILE>
--
--    (filename)
--    (program)
--    (method)
--       install
--       remove
--    (file type)
--       base64
--
-- Scripts are created by using this construct:
--
--    <FILE Run="(program)">
--    <INLINE>
--    # Scripting goes here
--    </INLINE>
--    </FILE>
--
-- Where <program> is any program that can read and execute the script
--   /bin/bash
--   /usr/bin/php
--
--   upgradepkg --install-new
--   upgradepkg --install-new --reinstall
--
-- Scripts are executed in the order they appear in the file.
--------------------------------------------------------------------------- -->


<!-- -------------------------------------------------------------------------
-- The 'pre-install' script
--------------------------------------------------------------------------- -->

<FILE Run="/bin/sh">
<INLINE>
<![CDATA[
<?
   # Scripting goes here
   # Possible things to do
   #
   # - Check unraid version
   #
   # - Clean up old versions of the plugin
   #    - Remove old cron entries
   #    - Remove the tmpfs directory
   #    - Unlink files
   #    - This should probably be an uninstall script in the tmpfs directory

?>
]]>
</INLINE>
</FILE>



<!-- -------------------------------------------------------------------------
-- Download the plugin tarball to the flash drive.
-- This contains all files that must be installed.
--------------------------------------------------------------------------- -->
<FILE Name="&fls-plg-txz;">
<URL>&plg-txz-URL;</URL>
</FILE>


<!-- -------------------------------------------------------------------------
-- Download the plugin tarball MD5 hash to the flash drive.
--------------------------------------------------------------------------- -->
<FILE Name="&fls-plg-md5;">
<URL>&plg-md5-URL;</URL>
</FILE>


<!-- -------------------------------------------------------------------------
-- Download a Slackware package to the flash drive and check the MD5
--------------------------------------------------------------------------- -->
<FILE Name="&fls-pkg-dir;/&prg-pkg;" Run="upgradepkg --install-new">
<URL>&prg-pkg-URL;</URL>
<MD5>&prg-pkg-md5;</MD5>
</FILE>







<!-- -------------------------------------------------------------------------
-- The 'post-install' script
--------------------------------------------------------------------------- -->

<FILE Run="/bin/bash">
<INLINE>

# Create syslog copy directory
#mkdir -p /boot/syslogs/cp

# Manage file access modes


# Link scripts to /usr/local/bin


# Add cron entries




</INLINE>
</FILE>


<!-- -------------------------------------------------------------------------
-- The 'remove' script.
--------------------------------------------------------------------------- -->
<FILE Run="/bin/bash" Method="remove">
<INLINE>

# remove the tarball package
removepkg "plg-ver"

# Remove the flash drive plugin directory
rm -rf "&fls-plg-dir;"

# Remove the tmpfs plugin directory
rm -rf "&tfs-plg-dir;"

# any other cleanup stuff


</INLINE>
</FILE>

</PLUGIN>

<!-- -------------------------------------------------------------------------
-- Plugin syntax
--------------------------------------------------------------------------- -->

<!-- DOCTYPE section is optional -->
<!DOCTYPE PLUGIN [
   <!ENTITY (entity) "(value)">
]>

<PLUGIN
   name="(plugin name, required)"
   author="(author, required)"
   version="(version, required)"
   pluginURL="(pluginURL, required)"
   min="(minimum unRAID version, optional)"
   max="(maximum unRAID version, optional)"
   launch="(launch PageMap location, optional)"
>

<CHANGES>
(change log, optional, only one permitted)
</CHANGES>

<FILE Name="(filename, optional but required with LOCAL, URL, or MD5)"
      Run="(program, optional but required when no Name attribute)"
      Method="(method, optional, default value: install, other values: remove)"
      Min="(minimum unraid version, optional)"
      Max="(maximum unraid version, optional)"
      Type="(file type, optional, values: base64)"
      Mode="(access mode, optional)"
>(file to process, at least one required, multiple permitted)

<LOCAL>(copy local file to file.name, optional, only one permitted)</LOCAL>

<URL>(download URL to fiel.name, optional)</URL>}

<MD5>(compare file.name to this MD5, optional)</MD5>}

<INLINE>
<![CDATA[
(file contents, optional, cdata required when contents will interfere with XML parsing)
]]>
</INLINE>}

</FILE>

</PLUGIN>
